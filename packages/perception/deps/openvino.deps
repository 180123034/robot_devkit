#!/bin/bash

DEFAULT_INSTALL=true

#
# build openvino binary
#
build_openvino_binary()
{
  echo "Build openvino binary..."
  local TARGET_PATH=$1
  cd $TARGET_PATH

  mkdir -p openvino_binart
  cd openvino_binart
  wget -c http://registrationcenter-download.intel.com/akdlm/irc_nas/15078/l_openvino_toolkit_p_2018.5.455.tgz
  tar -xvf l_openvino_toolkit_p_2018.5.455.tgz
  cd l_openvino_toolkit_p_2018.5.455
  sudo  ./install_cv_sdk_dependencies.sh
  install_cv_sdk_dependencies
  sed -i 's/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g' silent.cfg
  if [ ! -d /opt/intel/computer_vision_sdk ];then
    sudo ./install.sh --silent silent.cfg
  else
    echo "WARNING: Destination directory already exists."
  fi
  cd /opt/intel/computer_vision_sdk/install_dependencies
  sudo ./install_NEO_OCL_driver.sh

  # shellcheck disable=SC1091
  . /opt/intel/computer_vision_sdk/bin/setupvars.sh

  cd $TARGET_PATH
  mkdir -p openvino_binart_example
  cd openvino_binart_example
  mkdir -p build && cd build

  cmake /opt/intel/computer_vision_sdk/deployment_tools/inference_engine/samples/ && make && cd ..
  sudo /bin/cp -rf build /opt/intel/computer_vision_sdk/deployment_tools/inference_engine/samples/

  cd /opt/intel/computer_vision_sdk/deployment_tools/model_optimizer/install_prerequisites
  sudo ./install_prerequisites.sh
  mkdir -p ~/Downloads/models
  cd ~/Downloads/models
  wget http://download.tensorflow.org/models/object_detection/mask_rcnn_inception_v2_coco_2018_01_28.tar.gz
  tar -zxvf mask_rcnn_inception_v2_coco_2018_01_28.tar.gz
  cd mask_rcnn_inception_v2_coco_2018_01_28
  python3 /opt/intel/computer_vision_sdk/deployment_tools/model_optimizer/mo_tf.py --input_model frozen_inference_graph.pb --tensorflow_use_custom_operations_config /opt/intel/computer_vision_sdk/deployment_tools/model_optimizer/extensions/front/tf/mask_rcnn_support.json --tensorflow_object_detection_api_pipeline_config pipeline.config --reverse_input_channels --output_dir ./output/
  sudo mkdir -p /opt/models
  sudo ln -sf ~/Downloads/models/mask_rcnn_inception_v2_coco_2018_01_28 /opt/models/

  cd /opt/intel/computer_vision_sdk/deployment_tools/model_downloader
  sudo python3 ./downloader.py --name mobilenet-ssd

  #FP32 precision model
  sudo python3 /opt/intel/computer_vision_sdk/deployment_tools/model_optimizer/mo.py --input_model /opt/intel/computer_vision_sdk/deployment_tools/model_downloader/object_detection/common/mobilenet-ssd/caffe/mobilenet-ssd.caffemodel --output_dir /opt/intel/computer_vision_sdk/deployment_tools/model_downloader/object_detection/common/mobilenet-ssd/caffe/output/FP32 --mean_values [127.5,127.5,127.5] --scale_values [127.5]
  #FP16 precision model
  sudo python3 /opt/intel/computer_vision_sdk/deployment_tools/model_optimizer/mo.py --input_model /opt/intel/computer_vision_sdk/deployment_tools/model_downloader/object_detection/common/mobilenet-ssd/caffe/mobilenet-ssd.caffemodel --output_dir /opt/intel/computer_vision_sdk/deployment_tools/model_downloader/object_detection/common/mobilenet-ssd/caffe/output/FP16 --data_type=FP16 --mean_values [127.5,127.5,127.5] --scale_values [127.5]
  echo "Install OPENVINO SUCCESS!"
}

config_usb_rules()
{
# Configure the Neural Compute Stick USB Driver
  cd ~/Downloads
  sudo bash -c 'cat << EOF > /etc/udev/rules.d/97-usbboot.rules
SUBSYSTEM=="usb", ATTRS{idProduct}=="2150", ATTRS{idVendor}=="03e7", GROUP="users", MODE="0666", ENV{ID_MM_DEVICE_IGNORE}="1"
SUBSYSTEM=="usb", ATTRS{idProduct}=="2485", ATTRS{idVendor}=="03e7", GROUP="users", MODE="0666", ENV{ID_MM_DEVICE_IGNORE}="1"
SUBSYSTEM=="usb", ATTRS{idProduct}=="f63b", ATTRS{idVendor}=="03e7", GROUP="users", MODE="0666", ENV{ID_MM_DEVICE_IGNORE}="1"
EOF'

  sudo udevadm control --reload-rules
  sudo udevadm trigger
  sudo ldconfig
}

#
# Main entry to build deps
#
main()
{
  if [[ "$DEFAULT_INSTALL" != "true" ]]; then
    echo "Default not install, skip"
    exit
  fi

  TARGET_DIR=${1}

  if [ ! -d "${TARGET_DIR}" ]; then
    mkdir "${TARGET_DIR}" -p
    echo "No such directory, create \"${TARGET_DIR}\""
  fi

  build_openvino_binary "${TARGET_DIR}"
  config_usb_rules
}

main "$@"
